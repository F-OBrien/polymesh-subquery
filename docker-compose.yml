version: '3'

services:
  postgres:
    image: postgres:12-alpine
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node:
    build: ./
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      'postgres':
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      NODE_ENV: local
      # NO_NATIVE_GRAPHQL_DATA: 'TRUE'
      CALL_HANDLER: 'handleCall' # needed to generate project.yaml
      EVENT_HANDLER: 'handleEvent' # needed to generate project.yaml
      # NETWORK_ENDPOINT: wss://staging-rpc.polymesh.live
      # NETWORK_CHAIN_ID: '0x3c3183f6d701500766ff7d147b79c4f10014a095eaaa98e960dcef6b3ead50ee'
      NETWORK_ENDPOINT: ws://host.docker.internal:9944
      NETWORK_CHAIN_ID: '0xda7f2072787bfd0b09f7e12fca619afb6041b3d620f39f3a508814869100bf01'
      # START_BLOCK: 30596
    volumes:
      - ./:/app
    command:
      - -f=/app # Path of the project
      - --batch-size=100 # Batch size of blocks to fetch in one round
      # - --scale-batch-size # scale batch size based on memory usage. To know more about the process - https://github.com/subquery/subql/blob/c9bc9733deef726f78fa48387e74e52f8d6ca8d2/packages/node/src/indexer/fetch.service.ts#L88
      # - --timeout=3600 # Timeout for indexer sandbox to execute the mapping functions (in seconds)
      # - --local # This is now deprecated
      - --db-schema=public # Once tooling-gql is deprecated, we can remove change the schema name if required
      # - --force-clean # To remove all tables and schema before starting the app
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: onfinality/subql-query:latest
    ports:
      - 3001:3000
    depends_on:
      'postgres':
        condition: service_healthy
      'subquery-node':
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=public
      - --playground

volumes:
  db-data:
